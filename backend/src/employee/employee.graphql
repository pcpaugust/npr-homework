enum Gender {
  MALE
  FEMALE
  OTHER
}

type Employee {
  id: Int!
  first_name: String!
  last_name: String!
  salary: Float!
  gender: Gender!
  description: String
}

input PaginationInput {
  page: Int! = 1
  pageSize: Int! = 5
}

type PaginationMetadata {
  totalItems: Int!
  totalPages: Int!
  page: Int!
  pageSize: Int!
}

type PaginatedEmployee {
  items: [Employee!]!
  meta: PaginationMetadata!
}


input CreateEmployeeInput {
  first_name: String!
  last_name: String!
  salary: Float! = 0
  gender: Gender!
  description: String
}

input UpdateEmployeeInput {
  first_name: String
  last_name: String
  salary: Float
  gender: Gender
  description: String
}

type Query {
  EmployeeFindAll: [Employee!]!
  EmployeeFindAllWithPagination(pagination: PaginationInput!): PaginatedEmployee!
  EmployeeFindOne(id: Int!): Employee
}

type Mutation {
  EmployeeCreate(data: CreateEmployeeInput!): Employee!
  EmployeeUpdate(id: Int!, data: UpdateEmployeeInput!): Employee!
  EmployeeRemove(id: Int!): Employee!
}
